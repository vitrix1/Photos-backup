Для работы скрипта понадобится:
- установить библиотеки shutil, tqdm, json, requests, datetime, google-api-python-client
- для работы с VK:
1.получить токен
2.сохранить его в файл с именем vk_token.txt в папку со скриптом
3.количество копируемых фото указывает в count (строка 15)
4.можно указать из какого альбома будут скопированы фото profile, wall и saved (строка 15)
- при работе с Яндекс Диск:
1.получить токен
2.сохранить его в файл с именем ya_token.txt в папку со скриптом
После работы скрипта будет автоматически создана папка с id узера ВК,
в которой будут сохранённые фотографии
- при работе с Google Disc:
1.создать сервисный аккаунт
2.получить ключ в формате json
3.указать путь до файла в self.SERVICE_ACCOUNT_FILE (строка 77)
4.создать папку для загрузки фото из ВК в Google Disk
5.предоставить для неё доступ своему созданному сервисному аккаунту
6.перейти в папку и скопировать из адресной строки id папки
7.указать id в self.folder_id (строка 78)

Скрипт работает по следующему алгоритму:
1.создаётся временная папка tmp_dir
2.делается запрос по токену ВК и скачиваются данные о фото
Если алгоритм использует Яндекс:
3.создаётся удалённая папка с именем id пользователя ВК и туда загружаются по ссылке фото
4.для избежания повторяющихся имён делается запрос о всех файлах в папке и проверяется совпадение
Если алгоритм использует Гугл:
3.фото скачиваются в tmp_dir
4.проверяются совпадения имён в tmp_dir, если их нет,
то фото загружается в удалённую папку без изменений имени,
если наоборот, то к имени файла добавляется дата.
ТО ЕСТЬ ПРОВЕРКА УНИКАЛЬНОСТИ ИМЕНИ ПРОИСХОДИТ ТОЛЬКО ЗА ОДНУ СЕССИЮ ЗАГРУЗКИ ФОТОГРАФИЙ НА ДИСК.

Скрипт запускается с аргументами: <VK_person_id> <y/g>
По окончании работы скрипта будет создан файл result.json.